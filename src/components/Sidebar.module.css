.sidebar {
  background-color: var(--blue-800);
  border-radius: 8px;
  overflow: hidden; /* esse atributo impede que as coisas saim do container, ou seja fica tudo dentro das medidas*/
}

.cover {
  width: 100%;
  height: 72px;
  object-fit: cover; /*evita a distroção da imagem mesmo ela ficando do tamanho que queriamos*/
}

.profile {
  display: flex;
  flex-direction: column;
  align-items: center;

  margin-top: calc(0px - 1.5rem - 6px);
}

.avatar {
  /*box-sizing: initial // ele faz com que os atributos border... não ocupem um espaço maior do que do container, nesse caso a img*/
  /*poderiamos resolver essa questão utilizando o calc no css, dessa maneira ele faz uma conta das altura e ...*/
  width: calc(3rem  +  12px);
  height: calc(3rem + 12px);
  border-radius: 8px; /*Muito raramente é utilizado rem para border radius, em geral, utilizamos essa notação de medida para coisas que podem ser alterada rm função de fatores do usuario*/
  border: 4px solid var(--gray-500);
  outline: 2px solid var(--pink-600);
}

.profile strong {
  margin-top: 1rem;
  color: var(--gray-100);
  line-height: 1.6; /*160%, tudo isso foi retirado figma, para mantermos a estilização igual ao que foi planejado*/
}

.profile span {
  font-size: 0.875rem;
  color: var(--gray-400);
  line-height: 1.6;
}

.sidebar footer {
  border-top: 1px solid var(--pink-700);
  margin-top: 1.5rem;
  padding: 1.5rem 2rem 2rem;
}

.sidebar footer a {
  background-color: transparent;
  color: var(--pink-600);
  border: 1px solid var(--pink-600);
  border-radius: 8px;
  height: 50px;
  padding: 0 1.5rem;
  font-weight: 400;
  display: block;
  text-decoration: none;

  display: flex;
  align-items: center;
  justify-content: center;

  gap: 0.05rem;

  transition: color 0.1s, background-color 0.1s;
}

.sidebar footer a:hover {
  background-color: var(--pink-600);
  color: var(--gray-100);
}

